{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","state","transform","handlerNext","setState","maxTransform","props","images","length","frameSize","itemWidth","Math","max","step","handlerPrev","min","this","animationDuration","className","style","width","map","image","src","alt","transition","type","disabled","onClick","Component","App","handleChange","event","target","name","value","onChange","React","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fffcb679.chunk.js","sourcesContent":["import { Component } from 'react';\nimport './Carousel.scss';\n\ntype Props = {\n  images: string[],\n  step: number,\n  frameSize: number,\n  itemWidth: number,\n  animationDuration: number,\n};\n\ntype State = {\n  transform: number,\n};\n\nexport class Carousel extends Component<Props, State> {\n  state: Readonly<State> = {\n    transform: 0,\n  };\n\n  handlerNext = () => {\n    this.setState((state) => {\n      const maxTransform = -(\n        (this.props.images.length - this.props.frameSize) * this.props.itemWidth\n      );\n\n      if (state.transform !== maxTransform) {\n        return {\n          transform: Math.max(\n            maxTransform,\n            state.transform - this.props.step * this.props.itemWidth,\n          ),\n        };\n      }\n\n      return { transform: state.transform };\n    });\n  };\n\n  handlerPrev = () => {\n    this.setState(state => {\n      if (state.transform !== 0) {\n        return {\n          transform: Math.min(\n            state.transform + this.props.step * this.props.itemWidth,\n            0,\n          ),\n        };\n      }\n\n      return { transform: state.transform };\n    });\n  };\n\n  render() {\n    const {\n      images,\n      frameSize,\n      itemWidth,\n      animationDuration,\n    } = this.props;\n\n    const { transform } = this.state;\n\n    return (\n      <div className=\"Carousel\">\n        <ul\n          className=\"Carousel__list\"\n          style={{\n            width: `${itemWidth * frameSize}px`,\n          }}\n        >\n          {images.map(image => (\n            <li key={image}>\n              <img\n                src={image}\n                alt=\"1\"\n                className=\"Carousel__image\"\n                style={{\n                  width: `${itemWidth}px`,\n                  transform: `translateX(${transform}px)`,\n                  transition: `${animationDuration}ms`,\n                }}\n              />\n            </li>\n          ))}\n        </ul>\n\n        <div className=\"Carousel__buttons\">\n          <button\n            className=\"Carousel__button Carousel__button--prev\"\n            type=\"button\"\n            disabled={transform === 0}\n            onClick={this.handlerPrev}\n          >\n            &lt;\n          </button>\n\n          <button\n            className=\"Carousel__button Carousel__button--next\"\n            type=\"button\"\n            data-cy=\"next\"\n            disabled={transform === -(images.length - frameSize) * itemWidth}\n            onClick={this.handlerNext}\n          >\n            &gt;\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n","/* eslint-disable no-console */\nimport React from 'react';\nimport './App.scss';\nimport { Carousel } from './components/Carousel';\n\ninterface State {\n  images: string[];\n  itemWidth: number,\n  frameSize: number,\n  step: number,\n  animationDuration: number,\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    itemWidth: 130,\n    frameSize: 2,\n    step: 3,\n    animationDuration: 1000,\n  };\n\n  handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const {\n      name, value,\n    } = event.target;\n\n    switch (name) {\n      case 'itemWidth':\n        this.setState({\n          itemWidth: +value,\n        });\n        break;\n\n      case 'frameSize':\n        this.setState({\n          frameSize: +value,\n        });\n        break;\n\n      case 'step':\n        this.setState({\n          step: +value,\n        });\n        break;\n\n      case 'animationDuration':\n        this.setState({\n          animationDuration: +value,\n        });\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  render() {\n    const {\n      images,\n      itemWidth,\n      frameSize,\n      step,\n      animationDuration,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        {/* eslint-disable-next-line */}\n        <h1 data-cy=\"title\">\n          {`Carousel with ${images.length} images`}\n        </h1>\n\n        <Carousel\n          images={images}\n          step={step}\n          frameSize={frameSize}\n          itemWidth={itemWidth}\n          animationDuration={animationDuration}\n        />\n\n        <form className=\"App__form\">\n          <label>\n            {'Item Width: '}\n            <input\n              type=\"number\"\n              className=\"App__form-field\"\n              name=\"itemWidth\"\n              value={itemWidth}\n              min=\"100\"\n              max=\"200\"\n              onChange={this.handleChange}\n            />\n          </label>\n\n          <label>\n            {'Frame Size: '}\n            <input\n              type=\"number\"\n              className=\"App__form-field\"\n              name=\"frameSize\"\n              value={frameSize}\n              min=\"1\"\n              max=\"10\"\n              onChange={this.handleChange}\n            />\n          </label>\n\n          <label>\n            {'Step: '}\n            <input\n              type=\"number\"\n              className=\"App__form-field\"\n              name=\"step\"\n              value={step}\n              min=\"1\"\n              max=\"5\"\n              onChange={this.handleChange}\n            />\n          </label>\n\n          <label>\n            {'Animation Duration: '}\n            <input\n              type=\"number\"\n              className=\"App__form-field\"\n              name=\"animationDuration\"\n              value={animationDuration}\n              min=\"800\"\n              max=\"3000\"\n              step=\"100\"\n              onChange={this.handleChange}\n            />\n          </label>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}